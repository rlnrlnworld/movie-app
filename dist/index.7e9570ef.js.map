{"mappings":"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","sources":["<anon>","src/main.js","src/App.js","src/core/setup.js","src/routes/index.js","src/routes/Home.js","src/components/Headline.js","src/components/Search.js","src/store/movie.js","src/components/MovieList.js","src/components/MovieItem.js","src/components/MovieListMore.js","src/routes/Movie.js"],"sourcesContent":["////! Component\nclass $78c315eec4a39d4e$export$16fa2f45be04daa8 {\n    constructor(payload = {}){\n        const { tagName: tagName = \"div\", state: state = {}, props: props = {} } = payload;\n        this.el = document.createElement(tagName);\n        this.state = state;\n        this.props = props;\n        this.render();\n    }\n    render() {}\n}\n////! Router\nfunction $78c315eec4a39d4e$var$routeRender(routes) {\n    if (!location.hash) // *히스토리 내역에 기록을 남기지 않으면서 페이지 이동\n    history.replaceState(null, \"\", \"/#/\");\n    const routerView = document.querySelector(\"router-view\");\n    const [hash, queryString = \"\"] = location.hash.split(\"?\");\n    //? 1. 쿼리 스트링을 객체로 변환하여 히스토리의 상태에 저장 \n    const query = queryString.split(\"&\").reduce((acc, cur)=>{\n        const [key, value] = cur.split(\"=\");\n        acc[key] = value;\n        return acc;\n    }, {});\n    history.replaceState(query, \"\");\n    //? 2. 현재 라우트 정보를 찾아서 렌더링\n    const currentRoute = routes.find((route)=>new RegExp(`${route.path}/?$`).test(hash));\n    routerView.innerHTML = \"\";\n    routerView.append(new currentRoute.component().el);\n    //? 3. 화면 출력 후 스크롤 위치 복구\n    window.scrollTo(0, 0);\n}\nfunction $78c315eec4a39d4e$export$baddd0131ee8c05b(routes) {\n    return function() {\n        window.addEventListener(\"popstate\", ()=>{\n            $78c315eec4a39d4e$var$routeRender(routes);\n        });\n        $78c315eec4a39d4e$var$routeRender(routes);\n    };\n}\nclass $78c315eec4a39d4e$export$390f32400eaf98c9 {\n    constructor(state){\n        this.state = {};\n        this.observers = {};\n        for(const key in state)// *객체 데이터의 속성을 정의하는 메소드\n        Object.defineProperty(this.state, key, {\n            get: ()=>state[key],\n            set: (val)=>{\n                state[key] = val;\n                // 배열 데이터로 되어있는 콜백 함수들을 차례대로 실행\n                // this.observers[key].forEach(observer => observer(val))\n                if (Array.isArray(this.observers[key])) this.observers[key].forEach((observer)=>observer(val));\n            }\n        });\n    }\n    //* 상태를 감시하는 메소드\n    subscribe(key, cb) {\n        // 배열 데이터를 이용하여 실행 함수를 한 개 이상 등록할 수 있도록 구현\n        // 배열 데이터이면 push 메소드 사용\n        // this.observers ==> { key: [cb1, cb2, cb3] } 의 형식을 가진다.\n        // Array.isArray(this.observers[key])\n        // ? this.observers[key].push(cb)\n        // : this.observers[key] = [cb]\n        if (!Array.isArray(this.observers[key])) this.observers[key] = []; // 초기화\n        this.observers[key].push(cb);\n    }\n}\n\n\nclass $4c8cda5d2c6d1d8b$export$2e2bcd8739ae039 extends (0, $78c315eec4a39d4e$export$16fa2f45be04daa8) {\n    render() {\n        const routerView = document.createElement(\"router-view\");\n        this.el.append(routerView);\n    }\n}\n\n\n\n\n\nclass $3463ebd5beda56d4$export$2e2bcd8739ae039 extends (0, $78c315eec4a39d4e$export$16fa2f45be04daa8) {\n    render() {\n        this.el.classList.add(\"headline\");\n        this.el.innerHTML = `\r\n            <h1>\r\n                <span>OMDb API</span><br>\r\n                THE OPEN<br>\r\n                MOVIE DATABASE\r\n            </h1>\r\n            <p>\r\n                The OMDb API is a RESTful web service to obtain movie information,<br> \r\n                all content and images on the site are contributed and maintained by our users.<br>\r\n                If you find this service useful, please consider making a one-time donation or become a patron.\r\n            </p>\r\n        `;\n    }\n}\n\n\n\n\nconst $6e34c804fb642132$var$store = new (0, $78c315eec4a39d4e$export$390f32400eaf98c9)({\n    searchText: \"\",\n    page: 1,\n    pageMax: 1,\n    movies: [],\n    movie: {},\n    loading: false,\n    message: \"Search movie\"\n});\nvar $6e34c804fb642132$export$2e2bcd8739ae039 = $6e34c804fb642132$var$store;\nconst $6e34c804fb642132$export$b0c4d3ac9887d994 = async (page)=>{\n    $6e34c804fb642132$var$store.state.loading = true;\n    $6e34c804fb642132$var$store.state.page = page;\n    if (page === 1) {\n        $6e34c804fb642132$var$store.state.movies = [];\n        $6e34c804fb642132$var$store.state.message = \"\";\n    }\n    try {\n        const res = await fetch(\"http://localhost:1234/api/movie\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                title: $6e34c804fb642132$var$store.state.searchText,\n                page: page\n            })\n        });\n        const { Search: Search, totalResults: totalResults, Response: Response } = await res.json();\n        if (Response === \"True\") {\n            $6e34c804fb642132$var$store.state.movies = [\n                ...$6e34c804fb642132$var$store.state.movies,\n                ...Search\n            ];\n            $6e34c804fb642132$var$store.state.pageMax = Math.ceil(Number(totalResults) / 10) || 0;\n        } else {\n            $6e34c804fb642132$var$store.state.pageMax = 1;\n            $6e34c804fb642132$var$store.state.message = \"No movie found\";\n        }\n    } catch (error) {\n        console.error(\"searchMovies method Error: \", error);\n    } finally{\n        $6e34c804fb642132$var$store.state.loading = false;\n    }\n};\nconst $6e34c804fb642132$export$e7daf9f9f7371f9a = async (id)=>{\n    try {\n        // const res = await fetch(`https://www.omdbapi.com/?apikey=7035c60c&i=${id}&plot=full`)\n        const res = await fetch(\"/api/movie\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                id: id\n            })\n        });\n        $6e34c804fb642132$var$store.state.movie = await res.json();\n    } catch (e) {\n        console.error(\"getMovieDetails method Error: \", e);\n    }\n};\n\n\nclass $273a9624a2304ab6$export$2e2bcd8739ae039 extends (0, $78c315eec4a39d4e$export$16fa2f45be04daa8) {\n    render() {\n        this.el.classList.add(\"search\");\n        this.el.innerHTML = `\r\n            <input value=\"${(0, $6e34c804fb642132$export$2e2bcd8739ae039).state.searchText}\" placeholder=\"Enter the movie title to search\"/>\r\n            <button class=\"btn btn-primary\">Search</button>\r\n        `;\n        const inputEl = this.el.querySelector(\"input\");\n        inputEl.addEventListener(\"input\", ()=>{\n            (0, $6e34c804fb642132$export$2e2bcd8739ae039).state.searchText = inputEl.value;\n        });\n        inputEl.addEventListener(\"keydown\", (e)=>{\n            // Enter 입력 시 검색 실행\n            if (e.key === \"Enter\" && (0, $6e34c804fb642132$export$2e2bcd8739ae039).state.searchText.trim()) (0, $6e34c804fb642132$export$b0c4d3ac9887d994)(1);\n        });\n        const btnEl = this.el.querySelector(\".btn\");\n        btnEl.addEventListener(\"click\", ()=>{\n            // 버튼 클릭 시, 검색 실행\n            if ((0, $6e34c804fb642132$export$2e2bcd8739ae039).state.searchText.trim()) (0, $6e34c804fb642132$export$b0c4d3ac9887d994)(1);\n        });\n    }\n}\n\n\n\n\n\nclass $16b1f0d20ff4c553$export$2e2bcd8739ae039 extends (0, $78c315eec4a39d4e$export$16fa2f45be04daa8) {\n    constructor(props){\n        super({\n            props: props,\n            tagName: \"a\"\n        });\n    }\n    render() {\n        const { movie: movie } = this.props;\n        //! 경로 명시 속성 설정 메소드\n        this.el.setAttribute(\"href\", `#/movie?id=${movie.imdbID}`);\n        this.el.classList.add(\"movie\");\n        this.el.style.backgroundImage = `url(${movie.Poster})`;\n        // 화면에 출력\n        this.el.innerHTML = `\r\n            <div class=\"info\">\r\n                <div class=\"year\">\r\n                    ${movie.Year}\r\n                </div>\r\n                <div class=\"title\">\r\n                    ${movie.Title}\r\n                </div>\r\n            </div>\r\n        `;\n    }\n}\n\n\nclass $0ea5ecacb5b82df7$export$2e2bcd8739ae039 extends (0, $78c315eec4a39d4e$export$16fa2f45be04daa8) {\n    constructor(){\n        super();\n        (0, $6e34c804fb642132$export$2e2bcd8739ae039).subscribe(\"movies\", ()=>{\n            this.render();\n        });\n        (0, $6e34c804fb642132$export$2e2bcd8739ae039).subscribe(\"loading\", ()=>{\n            this.render();\n        });\n        (0, $6e34c804fb642132$export$2e2bcd8739ae039).subscribe(\"message\", ()=>{\n            this.render();\n        });\n    }\n    render() {\n        this.el.classList.add(\"movie-list\");\n        this.el.innerHTML = `\r\n            ${(0, $6e34c804fb642132$export$2e2bcd8739ae039).state.message ? `<div class=\"message\">${(0, $6e34c804fb642132$export$2e2bcd8739ae039).state.message}</div>` : '<div class=\"movies\"></div>'}\r\n            <div class=\"the-loader hide\"></div>\r\n        `;\n        const moviesEl = this.el.querySelector(\".movies\");\n        moviesEl?.append(...(0, $6e34c804fb642132$export$2e2bcd8739ae039).state.movies.map((movie)=>new (0, $16b1f0d20ff4c553$export$2e2bcd8739ae039)({\n                movie: movie\n            }).el));\n        const loaderEl = this.el.querySelector(\".the-loader\");\n        (0, $6e34c804fb642132$export$2e2bcd8739ae039).state.loading ? loaderEl.classList.remove(\"hide\") : loaderEl.classList.add(\"hide\");\n    }\n}\n\n\n\n\nclass $65dd1421359630e2$export$2e2bcd8739ae039 extends (0, $78c315eec4a39d4e$export$16fa2f45be04daa8) {\n    constructor(){\n        super({\n            tagName: \"button\"\n        });\n        (0, $6e34c804fb642132$export$2e2bcd8739ae039).subscribe(\"pageMax\", ()=>{\n            const { page: page, pageMax: pageMax } = (0, $6e34c804fb642132$export$2e2bcd8739ae039).state;\n            pageMax > page ? this.el.classList.remove(\"hide\") : this.el.classList.add(\"hide\");\n        });\n    }\n    render() {\n        this.el.classList.add(\"btn\", \"view-more\", \"hide\");\n        this.el.textContent = \"View More\";\n        this.el.addEventListener(\"click\", async ()=>{\n            this.el.classList.add(\"hide\");\n            await (0, $6e34c804fb642132$export$b0c4d3ac9887d994)((0, $6e34c804fb642132$export$2e2bcd8739ae039).state.page + 1);\n        });\n    }\n}\n\n\nclass $d2f1a655c6f71850$export$2e2bcd8739ae039 extends (0, $78c315eec4a39d4e$export$16fa2f45be04daa8) {\n    render() {\n        const headline = new (0, $3463ebd5beda56d4$export$2e2bcd8739ae039)().el;\n        const search = new (0, $273a9624a2304ab6$export$2e2bcd8739ae039)().el;\n        const movieList = new (0, $0ea5ecacb5b82df7$export$2e2bcd8739ae039)().el;\n        const movieListMore = new (0, $65dd1421359630e2$export$2e2bcd8739ae039)().el;\n        this.el.classList.add(\"container\");\n        this.el.append(headline, search, movieList, movieListMore);\n    }\n}\n\n\n\n\nclass $3dc4becb2b5793f6$export$2e2bcd8739ae039 extends (0, $78c315eec4a39d4e$export$16fa2f45be04daa8) {\n    async render() {\n        this.el.classList.add(\"container\", \"the-movie\");\n        //? Skeleton loading animation\n        this.el.innerHTML = `\r\n            <div class=\"poster skeleton\"></div>\r\n            <div class=\"description\">\r\n                <div class=\"title skeleton\"></div>\r\n                <div class=\"labels skeleton\"></div>\r\n                <div class=\"plot skeleton\"></div>\r\n            </div>\r\n        `;\n        //? 영화 정보 가져오기\n        await (0, $6e34c804fb642132$export$e7daf9f9f7371f9a)(history.state.id);\n        console.log((0, $6e34c804fb642132$export$2e2bcd8739ae039).state.movie);\n        const { movie: movie } = (0, $6e34c804fb642132$export$2e2bcd8739ae039).state;\n        const bigPoster = movie.Poster.replace(\"SX300\", \"SX700\");\n        this.el.innerHTML = `\r\n            <div \r\n                class=\"poster\" \r\n                style=\"background-image: url(${bigPoster})\"\r\n            >\r\n            </div>\r\n            <div class=\"description\">\r\n                <div class=\"title\">${movie.Title}</div>\r\n                <div class=\"labels\">\r\n                    <span>${movie.Released}</span>\r\n                    &nbsp;|&nbsp;\r\n                    <span>${movie.Runtime}</span>\r\n                    &nbsp;|&nbsp;\r\n                    <span>${movie.Country}</span>\r\n                </div>\r\n                <div class=\"plot\">${movie.Plot}</div>\r\n                <div>\r\n                    <h3>Ratings</h3>\r\n                    ${movie.Ratings.map((rating)=>{\n            return `<p><span class=\"site\"><div class=\"site-icon ${rating.Source}\">icon</div> ${rating.Source}</span> - ${rating.Value}</p>`;\n        }).join(\"\")}\r\n                </div>\r\n                <div>\r\n                    <h3>Actors</h3>\r\n                    <p>${movie.Actors}</p>\r\n                </div>\r\n                <div>\r\n                    <h3>Director</h3>\r\n                    <p>${movie.Director}</p>\r\n                </div>\r\n                <div>\r\n                    <h3>Production</h3>\r\n                    <p>${movie.Production}</p>\r\n                </div>\r\n                <div>\r\n                    <h3>Genre</h3>\r\n                    <p>${movie.Genre}</p>\r\n                </div>\r\n            </div>\r\n        `;\n    }\n}\n\n\nvar $bbf93c82d4cb8562$export$2e2bcd8739ae039 = (0, $78c315eec4a39d4e$export$baddd0131ee8c05b)([\n    {\n        path: \"#/\",\n        component: (0, $d2f1a655c6f71850$export$2e2bcd8739ae039)\n    },\n    {\n        path: \"#/movie\",\n        component: (0, $3dc4becb2b5793f6$export$2e2bcd8739ae039)\n    }\n]);\n\n\nconst $2b6e161c9edcf319$var$root = document.querySelector(\"#root\");\n$2b6e161c9edcf319$var$root.append(new (0, $4c8cda5d2c6d1d8b$export$2e2bcd8739ae039)().el);\n(0, $bbf93c82d4cb8562$export$2e2bcd8739ae039)();\n\n\n//# sourceMappingURL=index.7e9570ef.js.map\n","import App from './App'\r\nimport router from './routes'\r\n\r\nconst root = document.querySelector('#root')\r\nroot.append(new App().el)\r\n\r\nrouter()","import { Component } from './core/setup'\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        const routerView = document.createElement('router-view')\r\n        this.el.append(routerView)\r\n    }\r\n}","////! Component\r\nexport class Component {\r\n    constructor(payload = {}) {\r\n        const { tagName = 'div', state={}, props={} } = payload\r\n        this.el = document.createElement(tagName)\r\n        this.state = state\r\n        this.props = props\r\n        this.render()\r\n    }\r\n    render() {\r\n    }\r\n}\r\n\r\n////! Router\r\nfunction routeRender(routes) {\r\n    if (!location.hash) {\r\n        // *히스토리 내역에 기록을 남기지 않으면서 페이지 이동\r\n        history.replaceState(null, '', '/#/')\r\n    }\r\n\r\n    const routerView = document.querySelector('router-view')\r\n    const [hash, queryString = ''] = location.hash.split('?')\r\n\r\n    //? 1. 쿼리 스트링을 객체로 변환하여 히스토리의 상태에 저장 \r\n    const query = queryString\r\n    .split('&')\r\n    .reduce((acc, cur) => {\r\n        const [key, value] = cur.split('=')\r\n        acc[key] = value\r\n        return acc\r\n    },{})\r\n    history.replaceState(query, '')\r\n\r\n    //? 2. 현재 라우트 정보를 찾아서 렌더링\r\n    const currentRoute = routes.find(route => new RegExp(`${route.path}/?$`).test(hash))\r\n    routerView.innerHTML = ''\r\n    routerView.append(new currentRoute.component().el)\r\n\r\n    //? 3. 화면 출력 후 스크롤 위치 복구\r\n    window.scrollTo(0,0)\r\n}\r\nexport function createRouter(routes){\r\n    return function () {\r\n        window.addEventListener('popstate', () => {\r\n            routeRender(routes)\r\n        })\r\n        routeRender(routes)\r\n    }\r\n}\r\n\r\n////! Store\r\nexport class Store {\r\n    constructor(state) {\r\n        this.state = {}\r\n        this.observers = {}\r\n\r\n        for (const key in state) {\r\n            // *객체 데이터의 속성을 정의하는 메소드\r\n            Object.defineProperty(this.state, key, {\r\n                get: () => state[key],\r\n                set: val => {\r\n                    state[key] = val\r\n                    // 배열 데이터로 되어있는 콜백 함수들을 차례대로 실행\r\n                    // this.observers[key].forEach(observer => observer(val))\r\n                    if (Array.isArray(this.observers[key])) {\r\n                        this.observers[key].forEach(observer => observer(val));\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    //* 상태를 감시하는 메소드\r\n    subscribe(key, cb) {\r\n        // 배열 데이터를 이용하여 실행 함수를 한 개 이상 등록할 수 있도록 구현\r\n        // 배열 데이터이면 push 메소드 사용\r\n        // this.observers ==> { key: [cb1, cb2, cb3] } 의 형식을 가진다.\r\n        // Array.isArray(this.observers[key])\r\n        // ? this.observers[key].push(cb)\r\n        // : this.observers[key] = [cb]\r\n        if (!Array.isArray(this.observers[key])) {\r\n            this.observers[key] = []; // 초기화\r\n        }\r\n        this.observers[key].push(cb);\r\n    }\r\n}","import { Component, createRouter } from '../core/setup'\r\nimport Home from './Home'\r\nimport Movie from './Movie'\r\n\r\nexport default createRouter([\r\n    { path: '#/', component: Home },\r\n    { path: '#/movie', component: Movie }\r\n])","import { Component } from '../core/setup'\r\nimport Headline from '../components/Headline'\r\nimport Search from '../components/Search'\r\nimport MovieList from '../components/MovieList'\r\nimport MovieListMore from '../components/MovieListMore'\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        const headline = new Headline().el\r\n        const search = new Search().el\r\n        const movieList = new MovieList().el\r\n        const movieListMore = new MovieListMore().el\r\n\r\n        this.el.classList.add('container')\r\n        this.el.append(\r\n            headline,\r\n            search,\r\n            movieList,\r\n            movieListMore\r\n        )\r\n    }\r\n}","import { Component } from '../core/setup'\r\n\r\nexport default class Headline extends Component {\r\n    render() {\r\n        this.el.classList.add('headline')\r\n        this.el.innerHTML = `\r\n            <h1>\r\n                <span>OMDb API</span><br>\r\n                THE OPEN<br>\r\n                MOVIE DATABASE\r\n            </h1>\r\n            <p>\r\n                The OMDb API is a RESTful web service to obtain movie information,<br> \r\n                all content and images on the site are contributed and maintained by our users.<br>\r\n                If you find this service useful, please consider making a one-time donation or become a patron.\r\n            </p>\r\n        `\r\n    }\r\n}","import { Component } from '../core/setup'\r\nimport movieStore, { searchMovies } from '../store/movie'\r\n\r\nexport default class Search extends Component {\r\n    render() {\r\n        this.el.classList.add('search')\r\n        this.el.innerHTML = `\r\n            <input value=\"${movieStore.state.searchText}\" placeholder=\"Enter the movie title to search\"/>\r\n            <button class=\"btn btn-primary\">Search</button>\r\n        `\r\n\r\n        const inputEl = this.el.querySelector('input')\r\n        inputEl.addEventListener('input', () => {\r\n            movieStore.state.searchText = inputEl.value\r\n        })\r\n        inputEl.addEventListener('keydown', e => {\r\n            // Enter 입력 시 검색 실행\r\n            if( e.key === 'Enter' && movieStore.state.searchText.trim() ){\r\n                searchMovies(1)\r\n            }\r\n        })\r\n\r\n        const btnEl = this.el.querySelector('.btn')\r\n        btnEl.addEventListener('click', () => {\r\n            // 버튼 클릭 시, 검색 실행\r\n            if(movieStore.state.searchText.trim() ){\r\n                searchMovies(1)\r\n            }\r\n        })\r\n    }\r\n}","import { Store } from '../core/setup'\r\n\r\nconst store = new Store({\r\n    searchText: '',\r\n    page: 1,\r\n    pageMax : 1,\r\n    movies: [],\r\n    movie: {},\r\n    loading: false,\r\n    message: 'Search movie'\r\n})\r\n\r\nexport default store\r\nexport const searchMovies = async page => {\r\n    store.state.loading = true\r\n    store.state.page = page\r\n    if (page === 1) {\r\n        store.state.movies = []\r\n        store.state.message = ''\r\n    }\r\n    try {\r\n        const res = await fetch('http://localhost:1234/api/movie', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n              },\r\n            body: JSON.stringify({\r\n                title: store.state.searchText,\r\n                page\r\n            })\r\n        })\r\n        const { Search, totalResults, Response } = await res.json()\r\n        if (Response === 'True') {\r\n            store.state.movies = [\r\n                ...store.state.movies,\r\n                ...Search\r\n            ]\r\n            store.state.pageMax = Math.ceil(Number(totalResults) / 10) || 0        \r\n        } else {\r\n            store.state.pageMax = 1\r\n            store.state.message = 'No movie found'\r\n        }\r\n    } catch (error) {\r\n        console.error('searchMovies method Error: ',error)\r\n    } finally {\r\n        store.state.loading = false\r\n    }\r\n}\r\nexport const getMovieDetails = async id => {\r\n    try {\r\n        // const res = await fetch(`https://www.omdbapi.com/?apikey=7035c60c&i=${id}&plot=full`)\r\n        const res = await fetch('/api/movie', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                id\r\n            })\r\n        })\r\n        store.state.movie = await res.json()\r\n    } catch (e) {\r\n        console.error('getMovieDetails method Error: ', e)\r\n    }\r\n}","import { Component } from '../core/setup'\r\nimport movieStore from '../store/movie'\r\nimport MovieItem from './MovieItem'\r\n\r\nexport default class MovieList extends Component {\r\n    constructor() {\r\n        super()\r\n        movieStore.subscribe('movies', () => {\r\n            this.render()\r\n        })\r\n        movieStore.subscribe('loading', () => {\r\n            this.render()\r\n        })\r\n        movieStore.subscribe('message', () => {\r\n            this.render()\r\n        })\r\n    }\r\n    render() {\r\n        this.el.classList.add('movie-list')\r\n        this.el.innerHTML = `\r\n            ${movieStore.state.message \r\n                ? `<div class=\"message\">${movieStore.state.message}</div>`\r\n                : '<div class=\"movies\"></div>'\r\n            }\r\n            <div class=\"the-loader hide\"></div>\r\n        `\r\n\r\n        const moviesEl = this.el.querySelector('.movies')\r\n        moviesEl?.append(\r\n            ...movieStore.state.movies.map(movie => new MovieItem({\r\n                    movie\r\n                }).el)\r\n        )\r\n\r\n        const loaderEl = this.el.querySelector('.the-loader')\r\n        movieStore.state.loading\r\n        ? loaderEl.classList.remove('hide') \r\n        : loaderEl.classList.add('hide')\r\n\r\n    }\r\n}","import { Component } from '../core/setup'\r\n\r\nexport default class MovieItem extends Component {\r\n    constructor(props) {\r\n        super({\r\n            props,\r\n            tagName: 'a'\r\n        })\r\n    }\r\n    render() {\r\n        const { movie } = this.props\r\n        \r\n        //! 경로 명시 속성 설정 메소드\r\n        this.el.setAttribute('href', `#/movie?id=${movie.imdbID}`)\r\n        this.el.classList.add('movie')\r\n        this.el.style.backgroundImage = `url(${movie.Poster})`\r\n    \r\n        // 화면에 출력\r\n        this.el.innerHTML = `\r\n            <div class=\"info\">\r\n                <div class=\"year\">\r\n                    ${movie.Year}\r\n                </div>\r\n                <div class=\"title\">\r\n                    ${movie.Title}\r\n                </div>\r\n            </div>\r\n        `\r\n    }\r\n}","import { Component } from '../core/setup'\r\nimport movieStore, { searchMovies } from '../store/movie'\r\n\r\nexport default class MovieListMore extends Component {\r\n    constructor() {\r\n        super({\r\n            tagName: 'button'\r\n        })\r\n        movieStore.subscribe('pageMax', () => {\r\n            const { page, pageMax } = movieStore.state\r\n\r\n            pageMax > page \r\n            ? this.el.classList.remove('hide') \r\n            : this.el.classList.add('hide')\r\n        })\r\n    }\r\n    render() {\r\n        this.el.classList.add('btn','view-more','hide')\r\n        this.el.textContent = 'View More'\r\n\r\n        this.el.addEventListener('click', async () => {\r\n            this.el.classList.add('hide')\r\n            await searchMovies(movieStore.state.page + 1)\r\n        })\r\n    }\r\n}","import { Component } from '../core/setup'\r\nimport movieStore, { getMovieDetails } from '../store/movie'\r\n\r\nexport default class Movie extends Component {\r\n    async render() {\r\n        this.el.classList.add('container','the-movie')\r\n        //? Skeleton loading animation\r\n        this.el.innerHTML = `\r\n            <div class=\"poster skeleton\"></div>\r\n            <div class=\"description\">\r\n                <div class=\"title skeleton\"></div>\r\n                <div class=\"labels skeleton\"></div>\r\n                <div class=\"plot skeleton\"></div>\r\n            </div>\r\n        ` \r\n\r\n        //? 영화 정보 가져오기\r\n        await getMovieDetails(history.state.id)\r\n        console.log(movieStore.state.movie)\r\n        const { movie } = movieStore.state\r\n        const bigPoster = movie.Poster.replace('SX300','SX700')\r\n\r\n        this.el.innerHTML = `\r\n            <div \r\n                class=\"poster\" \r\n                style=\"background-image: url(${bigPoster})\"\r\n            >\r\n            </div>\r\n            <div class=\"description\">\r\n                <div class=\"title\">${movie.Title}</div>\r\n                <div class=\"labels\">\r\n                    <span>${movie.Released}</span>\r\n                    &nbsp;|&nbsp;\r\n                    <span>${movie.Runtime}</span>\r\n                    &nbsp;|&nbsp;\r\n                    <span>${movie.Country}</span>\r\n                </div>\r\n                <div class=\"plot\">${movie.Plot}</div>\r\n                <div>\r\n                    <h3>Ratings</h3>\r\n                    ${movie.Ratings.map(rating => {\r\n                        return `<p><span class=\"site\"><div class=\"site-icon ${rating.Source}\">icon</div> ${rating.Source}</span> - ${rating.Value}</p>`\r\n                    }).join('')}\r\n                </div>\r\n                <div>\r\n                    <h3>Actors</h3>\r\n                    <p>${movie.Actors}</p>\r\n                </div>\r\n                <div>\r\n                    <h3>Director</h3>\r\n                    <p>${movie.Director}</p>\r\n                </div>\r\n                <div>\r\n                    <h3>Production</h3>\r\n                    <p>${movie.Production}</p>\r\n                </div>\r\n                <div>\r\n                    <h3>Genre</h3>\r\n                    <p>${movie.Genre}</p>\r\n                </div>\r\n            </div>\r\n        `\r\n    }\r\n}"],"names":["$78c315eec4a39d4e$export$16fa2f45be04daa8","constructor","payload","tagName","state","props","el","document","createElement","render","$78c315eec4a39d4e$var$routeRender","routes","location","hash","history","replaceState","routerView","querySelector","queryString","split","query","reduce","acc","cur","key","value","currentRoute","find","route","RegExp","path","test","innerHTML","append","component","window","scrollTo","$3463ebd5beda56d4$export$2e2bcd8739ae039","classList","add","$6e34c804fb642132$var$store","observers","Object","defineProperty","get","set","val","Array","isArray","forEach","observer","subscribe","cb","push","searchText","page","pageMax","movies","movie","loading","message","$6e34c804fb642132$export$b0c4d3ac9887d994","res","fetch","method","headers","body","JSON","stringify","title","Search","totalResults","Response","json","Math","ceil","Number","error","console","$6e34c804fb642132$export$e7daf9f9f7371f9a","id","e","$273a9624a2304ab6$export$2e2bcd8739ae039","inputEl","addEventListener","trim","btnEl","$16b1f0d20ff4c553$export$2e2bcd8739ae039","setAttribute","imdbID","style","backgroundImage","Poster","Year","Title","$0ea5ecacb5b82df7$export$2e2bcd8739ae039","moviesEl","map","loaderEl","remove","$65dd1421359630e2$export$2e2bcd8739ae039","textContent","$bbf93c82d4cb8562$export$2e2bcd8739ae039","headline","search","movieList","movieListMore","log","bigPoster","replace","Released","Runtime","Country","Plot","Ratings","rating","Source","Value","join","Actors","Director","Production","Genre","$2b6e161c9edcf319$var$root"],"version":3,"file":"index.7e9570ef.js.map"}